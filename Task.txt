	Необходимо написать лексический анализатор. Для более полного понимания советую прочитать https://ru.wikipedia.org/wiki/Лексический_анализ
Необходимо создать  класс Lexer, имеющий два метода:

void register(IReadable reader) - регистрация конкретного ридера.

Token[] tokenize(String s) - метод, который выделяет лексемы и возвращает их в виде массива.

 В случае, если токен прочитать не удалось, метод возвращает null. 
IReadable - это интерфейс или абстрактный класс для всех уже написанных ранее XxxReader-ов.

Пример для строки "-42is thenumber" должны возвращать строки:

	[-42, is, <пробел>, thenumber]

	Далее, необходимо создать базовый класс, облегчающий создание TokenReader-ов, основанных на конечных автоматах. На основе этого класса создать следующие классы:

	1. Два ридера комментариев (по спецификации http://docs.oracle.com/javase/specs/jls/se7/html/jls-3.html#jls-3.7)

		EndOfLineCommentReader — вычитывающий из строки максимальный префикс, являющийся однострочным комментарием.
		TraditionalCommentReader — многострочный комментарий.

	2. Ридер для чисел:

		FloatReader — действительного числа, согласно спецификации DecimalFloatingPointLiteral тут http://docs.oracle.com/javase/specs/jls/se7/html/jls-3.html#jls-3.10.2

	Использование исходников необязательно.  Это просто пример, как могла бы выглядеть реализация. По мере написания ридеров возможно будет выделить абстрактный базовый класс, который предоставит вам универсальный механизм разбора с помощью конечного автомата. Таким образом, к в классах-наследниках необходимо будет просто сконфигрурировать этот автомат. Использование регулярных выражений запрещено. Обращаю Ваше внимание на понимание принципов ООП в данной задаче - необходимо применить ООП и написать "красивый" код.